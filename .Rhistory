df_sf_reprojected <- st_transform(df_sf,crs(can2021) )
View(df_sf_reprojected)
plot(can2021,legend=FALSE)
points(df_sf_reprojected,col="BLUE",cex=6)
plot(can2021,legend=FALSE)
points(df_sf_reprojected,col="BLUE",cex=1)
extract(can2021,df_sf_reprojected)
cov2021<-extract(can2021,df_sf_reprojected)
View(cov2021)
i21<-rbind(i21,cov2021)
i21<-cbind(i21,cov2021)
View(i21)
rm(i21)
dat<-data.frame(longitude=smaps3$LON,latitude=smaps3$LAT)
df_sf <- st_as_sf(dat, coords = c("longitude", "latitude"), crs = 4326)
df_sf_reprojected <- st_transform(df_sf,crs(can2021) )
can2020<-brick("science_tcc_conus_2020_v2021-4.tif")
can2019<-brick("science_tcc_conus_2019_v2021-4.tif")
can2021<-brick("science_tcc_conus_2021_v2021-4.tif")
can2020<-brick("science_tcc_conus_2020_v2021-4.tif")
can2019<-brick("science_tcc_conus_2019_v2021-4.tif")
can2018<-brick("science_tcc_conus_2018_v2021-4.tif")
can2017<-brick("science_tcc_conus_2017_v2021-4.tif")
can2016<-brick("science_tcc_conus_2016_v2021-4.tif")
can2015<-brick("science_tcc_conus_2015_v2021-4.tif")
can2014<-brick("science_tcc_conus_2014_v2021-4.tif")
can2013<-brick("science_tcc_conus_2013_v2021-4.tif")
can2012<-brick("science_tcc_conus_2012_v2021-4.tif")
i21<-filter(smaps3, INVYR==2021)
i20<-filter(smaps3, INVYR==2020)
smaps3$coords<-df_sf_reprojected
View(smaps3)
smaps3<-left_join(smaps2,subplot)
smaps3<-rbind(smaps3,df_sf_reprojected)
View(smaps3)
smaps3<-left_join(smaps2,subplot)
smaps3<-cbind(smaps3,df_sf_reprojected)
i21<-filter(smaps3, INVYR==2021)
i20<-filter(smaps3, INVYR==2020)
i19<-filter(smaps3, INVYR==2019)
i18<-filter(smaps3, INVYR==2018)
i17<-filter(smaps3, INVYR==2017)
i16<-filter(smaps3, INVYR==2016)
i15<-filter(smaps3, INVYR==2015)
i14<-filter(smaps3, INVYR==2014)
i13<-filter(smaps3, INVYR==2013)
i12<-filter(smaps3, INVYR==2012)
i21$cover<-extract(can2021,i21$geometry)
extract(can2021,i21$geometry)
df_sf_reprojected
as.data.frame(df_sf_reprojected)
View(df_sf_reprojected)
extract(can2021,i21$geometry)
st_geometry(df_sf_reprojected)
goo<-st_geometry(df_sf_reprojected)
View(goo)
as.vector(as(df_sf_reprojected, "Spatial")@coords)
goo<-as.vector(as(df_sf_reprojected, "Spatial")@coords)
seal_coords <- do.call(rbind, st_geometry(df_sf_reprojected)) %>%
as_tibble() %>% setNames(c("x","y"))
View(seal_coords)
smaps3<-left_join(smaps2,subplot)
smaps3<-cbind(smaps3,seal_coords)
i21<-filter(smaps3, INVYR==2021)
extract(can2021,c(i21$x,,i21$y))
extract(can2021,c(i21$x,i21$y))
View(smaps3)
i21<-filter(smaps3, INVYR==2021)
View(i21)
i21<-filter(smaps3, INVYR==2021)
i20<-filter(smaps3, INVYR==2020)
i19<-filter(smaps3, INVYR==2019)
i18<-filter(smaps3, INVYR==2018)
i17<-filter(smaps3, INVYR==2017)
i16<-filter(smaps3, INVYR==2016)
i15<-filter(smaps3, INVYR==2015)
i14<-filter(smaps3, INVYR==2014)
i13<-filter(smaps3, INVYR==2013)
i12<-filter(smaps3, INVYR==2012)
extract(can2021,c(i21$x,i21$y))
table(extract(can2021,c(i21$x,i21$y)))
smaps3<-left_join(smaps2,subplot)
###add canopy cover
graphics.off()
setwd("~/Desktop/plantInvaderRecruit/canopy_data/")
can2021<-brick("science_tcc_conus_2021_v2021-4.tif")
can2020<-brick("science_tcc_conus_2020_v2021-4.tif")
can2019<-brick("science_tcc_conus_2019_v2021-4.tif")
can2018<-brick("science_tcc_conus_2018_v2021-4.tif")
can2017<-brick("science_tcc_conus_2017_v2021-4.tif")
can2016<-brick("science_tcc_conus_2016_v2021-4.tif")
can2015<-brick("science_tcc_conus_2015_v2021-4.tif")
can2014<-brick("science_tcc_conus_2014_v2021-4.tif")
can2013<-brick("science_tcc_conus_2013_v2021-4.tif")
can2012<-brick("science_tcc_conus_2012_v2021-4.tif")
i21<-filter(smaps3, INVYR==2021)
i20<-filter(smaps3, INVYR==2020)
i19<-filter(smaps3, INVYR==2019)
i18<-filter(smaps3, INVYR==2018)
i17<-filter(smaps3, INVYR==2017)
i16<-filter(smaps3, INVYR==2016)
i15<-filter(smaps3, INVYR==2015)
i14<-filter(smaps3, INVYR==2014)
i13<-filter(smaps3, INVYR==2013)
i12<-filter(smaps3, INVYR==2012)
dat<-data.frame(longitude=i21$LON,latitude=i21$LAT)
df_sf <- st_as_sf(dat, coords = c("longitude", "latitude"), crs = 4326)
df_sf_reprojected <- st_transform(df_sf,crs(can2021) )
raster::extract(can2021,df_sf_reprojected)
i21$canCov<-raster::extract(can2021,df_sf_reprojected)
View(i21)
#2020
dat<-data.frame(longitude=i20$LON,latitude=i20$LAT)
df_sf <- st_as_sf(dat, coords = c("longitude", "latitude"), crs = 4326)
df_sf_reprojected <- st_transform(df_sf,crs(can2020) )
i20$canCov<-raster::extract(can2020,df_sf_reprojected)
View(i20)
#2019
dat<-data.frame(longitude=i19$LON,latitude=i19$LAT)
df_sf <- st_as_sf(dat, coords = c("longitude", "latitude"), crs = 4326)
df_sf_reprojected <- st_transform(df_sf,crs(can2019) )
i19$canCov<-raster::extract(can2019,df_sf_reprojected)
#2018
dat<-data.frame(longitude=i18$LON,latitude=i18$LAT)
df_sf <- st_as_sf(dat, coords = c("longitude", "latitude"), crs = 4326)
df_sf_reprojected <- st_transform(df_sf,crs(can2018) )
i18$canCov<-raster::extract(can2018,df_sf_reprojected)
#2017
dat<-data.frame(longitude=i17$LON,latitude=i17$LAT)
df_sf <- st_as_sf(dat, coords = c("longitude", "latitude"), crs = 4326)
df_sf_reprojected <- st_transform(df_sf,crs(can2017) )
i17$canCov<-raster::extract(can2017,df_sf_reprojected)
#2016
dat<-data.frame(longitude=i16$LON,latitude=i16$LAT)
df_sf <- st_as_sf(dat, coords = c("longitude", "latitude"), crs = 4326)
df_sf_reprojected <- st_transform(df_sf,crs(can2016) )
i16$canCov<-raster::extract(can2016,df_sf_reprojected)
#2015
dat<-data.frame(longitude=i15$LON,latitude=i15$LAT)
df_sf <- st_as_sf(dat, coords = c("longitude", "latitude"), crs = 4326)
df_sf_reprojected <- st_transform(df_sf,crs(can2015) )
i15$canCov<-raster::extract(can2015,df_sf_reprojected)
#2014
dat<-data.frame(longitude=i14$LON,latitude=i14$LAT)
df_sf <- st_as_sf(dat, coords = c("longitude", "latitude"), crs = 4326)
df_sf_reprojected <- st_transform(df_sf,crs(can2014) )
i14$canCov<-raster::extract(can2014,df_sf_reprojected)
#2013
dat<-data.frame(longitude=i13$LON,latitude=i13$LAT)
df_sf <- st_as_sf(dat, coords = c("longitude", "latitude"), crs = 4326)
df_sf_reprojected <- st_transform(df_sf,crs(can2013) )
i13$canCov<-raster::extract(can2013,df_sf_reprojected)
#2012
dat<-data.frame(longitude=i12$LON,latitude=i12$LAT)
df_sf <- st_as_sf(dat, coords = c("longitude", "latitude"), crs = 4326)
df_sf_reprojected <- st_transform(df_sf,crs(can2012) )
i12$canCov<-raster::extract(can2012,df_sf_reprojected)
slings4<-rbind(i21,i20,i19,i18,i17,i16,i15,i14,i13,i12)
View(slings4)
temp<- list.files(pattern="*.csv")
invr<- rbindlist(sapply(temp, fread,simplify = FALSE), idcol = 'filename')
invy<-invr%>% group_by(PLOT,SUBP,STATECD,COUNTYCD,INVYR,CONDID) %>%summarise(total_invcov=sum(COVER_PCT))
invr<- rbindlist(sapply(temp, fread,simplify = FALSE), idcol = 'filename')
invy<-invr%>% group_by(PLOT,SUBP,STATECD,COUNTYCD,INVYR,CONDID) %>%summarise(total_invcov=sum(COVER_PCT))
setwd("~/Desktop/plantInvaderRecruit/invasive_data/")
temp<- list.files(pattern="*.csv")
invr<- rbindlist(sapply(temp, fread,simplify = FALSE), idcol = 'filename')
invy<-invr%>% group_by(PLOT,SUBP,STATECD,COUNTYCD,INVYR,CONDID) %>%summarise(total_invcov=sum(COVER_PCT))
View(invy)
smaps4<-rbind(i21,i20,i19,i18,i17,i16,i15,i14,i13,i12)
smaps4<-left_join(smaps4,invy)
smaps4$total_invcov<-ifelse(is.na(smaps4$total_invcov),0,smaps4$total_invcov)
smaps4$covlevel<-ifelse(smaps4$total_invcov>9,"high","low")
smaps4$covlevel<-ifelse(smaps4$total_invcov==0,"none",smaps4$covlevel)
table(smaps4$covlevel)
View(smaps4)
smapsplot<-gather(smaps4,"class","count",13:18)
View(smapsplot)
ggplot(aes(x = class,y= count,fill=covlevel), data = smapsplot) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+
#stat_summary(fun.y = mean, geom ="smooth",aes(color=covlevel))+
theme_bw()
##predictors
##invasive cover, elevation, slope, aspect, water in plot, canopy cover, condition class
write.csv(smaps4,"..//output/invRegen_data.csv",row.names = FALSE)
ACRU<-filter(smapsplot,COMMON_NAME= "Red Maple")
ACRU<-filter(smapsplot,COMMON_NAME== "Red Maple")
ACRU<-filter(smapsplot,COMMON_NAME== "Red maple")
ACRU<-filter(smapsplot,COMMON_NAME== "red maple")
ggplot(aes(x = class,y= count,fill=covlevel), data = ACRU) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+
ggplot(aes(x = class,y= count,fill=covlevel), data = smapsplot) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+
#stat_summary(fun.y = mean, geom ="smooth",aes(color=covlevel))+
theme_bw()
ggplot(aes(x = class,y= count,fill=covlevel), data = ACRU) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw()
ACSA<-filter(smapsplot,COMMON_NAME== "sugar maple")
ggplot(aes(x = class,y= count,fill=covlevel), data = ACSA) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw()
ACSA<-filter(smapsplot,COMMON_NAME== "sugar maple")
ggplot(aes(x = class,y= count,fill=covlevel), data = ACSA) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw()
PIST<-filter(smapsplot,COMMON_NAME== "white pine")
PIST<-filter(smapsplot,COMMON_NAME== "eastern white pine")
ggplot(aes(x = class,y= count,fill=covlevel), data = PIST) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw()
BEAL<-filter(smapsplot,COMMON_NAME== "yellow birch")
ggplot(aes(x = class,y= count,fill=covlevel), data = BEAL) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw()
POTR<-filter(smapsplot,COMMON_NAME== "quaking aspen")
ggplot(aes(x = class,y= count,fill=covlevel), data = POTR) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw()
QUAL<-filter(smapsplot,COMMON_NAME== "white oak")
ggplot(aes(x = class,y= count,fill=covlevel), data = QUAL) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw()
BEPA<-filter(smapsplot,COMMON_NAME== "paper birch")
ggplot(aes(x = class,y= count,fill=covlevel), data = BEPA) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw()
ggplot(aes(x = class,y= count,fill=covlevel), data = ACSA) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw()
FAGR<-filter(smapsplot,COMMON_NAME== "american beech")
FAGR<-filter(smapsplot,COMMON_NAME== "beech")
FAGR<-filter(smapsplot,COMMON_NAME== "American beech")
ggplot(aes(x = class,y= count,fill=covlevel), data = FAGR) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw()
ggplot(aes(x = class,y= count,fill=covlevel), data = BEAL) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw()
ggpubr::ggarrange(ggplot(aes(x = class,y= count,fill=covlevel), data = ACSA) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = BEAL) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),common.legend=TRUE)
ggpubr::ggarrange(ggplot(aes(x = class,y= count,fill=covlevel), data = ACSA) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = BEAL) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = QUAL) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
common.legend=TRUE)
PRSE<-filter(smapsplot,COMMON_NAME== "black cherry")
ggpubr::ggarrange(ggplot(aes(x = class,y= count,fill=covlevel), data = ACSA) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = BEAL) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = QUAL) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = PRSE) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
common.legend=TRUE)
View(counter)
OSVI<-filter(smapsplot,COMMON_NAME== "hop-hornbeam")
OSVI<-filter(smapsplot,COMMON_NAME== "eastern hophornbeam")
ACPE<-filter(smapsplot,COMMON_NAME== "striped maple")
ggpubr::ggarrange(ggplot(aes(x = class,y= count,fill=covlevel), data = OSVI) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = ACPE) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
common.legend=TRUE)
CACO<-filter(smapsplot,COMMON_NAME== "bitternut hickory")
ggpubr::ggarrange(ggplot(aes(x = class,y= count,fill=covlevel), data = ACSA) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = BEAL) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = QUAL) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = CACO) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
common.legend=TRUE)
FRAM<-filter(smapsplot,COMMON_NAME== "American ash")
FRAM<-filter(smapsplot,COMMON_NAME== "white ash")
ggpubr::ggarrange(ggplot(aes(x = class,y= count,fill=covlevel), data = ACSA) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = BEAL) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = QUAL) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = FRAM) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
common.legend=TRUE)
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw()
ggplot(aes(x = class,y= count,fill=covlevel), data = FRAM) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw()
ggpubr::ggarrange(ggplot(aes(x = class,y= count,fill=covlevel), data = ACSA) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = BEAL) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = BEPA) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
common.legend=TRUE)
ggpubr::ggarrange(ggplot(aes(x = class,y= count,fill=covlevel), data = ACSA) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = BEAL) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = POTR) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
common.legend=TRUE)
QURU<-filter(smapsplot,COMMON_NAME== "red oak")
QURU<-filter(smapsplot,COMMON_NAME== " northern red oak")
ggpubr::ggarrange(ggplot(aes(x = class,y= count,fill=covlevel), data = ACSA) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = BEAL) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = QURU) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
common.legend=TRUE)
QURU<-filter(smapsplot,COMMON_NAME== " northern red oak")
QURU<-filter(smapsplot,COMMON_NAME== " northern red oak")
QURU<-filter(smapsplot,COMMON_NAME== "northern red oak")
ggpubr::ggarrange(ggplot(aes(x = class,y= count,fill=covlevel), data = ACSA) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = BEAL) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = QURU) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
common.legend=TRUE)
BELE<-filter(smapsplot,COMMON_NAME== "black birch")
BELE<-filter(smapsplot,COMMON_NAME== "sweet birch")
ggpubr::ggarrange(ggplot(aes(x = class,y= count,fill=covlevel), data = ACSA) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = BEAL) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = BELE) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
common.legend=TRUE)
ggpubr::ggarrange(ggplot(aes(x = class,y= count,fill=covlevel), data = BEPA) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = BEAL) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = BELE) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
common.legend=TRUE)
ABBA<-filter(smapsplot,COMMON_NAME== "balsalm fir")
ABBA<-filter(smapsplot,COMMON_NAME== "balsam fir")
ggpubr::ggarrange(ggplot(aes(x = class,y= count,fill=covlevel), data = ABBA) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = BEAL) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = BELE) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
common.legend=TRUE)
ggpubr::ggarrange(ggplot(aes(x = class,y= count,fill=covlevel), data = ACRU) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = BEAL) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = POTR) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
common.legend=TRUE)
TIAM<-filter(smapsplot,COMMON_NAME== "basswood")
TIAM<-filter(smapsplot,COMMON_NAME== "American basswood")
ggpubr::ggarrange(ggplot(aes(x = class,y= count,fill=covlevel), data = ACSA) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = TIAM) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = BEAL) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = POTR) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
common.legend=TRUE)
ggpubr::ggarrange(ggplot(aes(x = class,y= count,fill=covlevel), data = ACSA) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = TIAM) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = BEAL) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = BELE) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = POTR) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = FRAM) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
common.legend=TRUE)
ggpubr::ggarrange(ggplot(aes(x = class,y= count,fill=covlevel), data = ACSA) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = TIAM) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = BEAL) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = BELE) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = POTR) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
ggplot(aes(x = class,y= count,fill=covlevel), data = FRAM) +  stat_summary(fun.y = mean, geom = "bar",position="dodge",alpha=0.9) +
stat_summary(fun.data = mean_se, geom = "errorbar",position="dodge")+theme_bw(),
common.legend=TRUE,labels = c("sugar maple","basswood","yellow birch","sweet birch", "aspen", "white ash"))
rm(list=ls())
options(stringsAsFactors = FALSE)
options(mc.cores = parallel::detectCores())
graphics.off()
setwd("~/Documents/git/bioticHogs/")
library(brms)
library(tidybayes)
d<-read.csv("Analyses/Master/public/biohogsData.csv")
View(d)
library(dplyr)
library(ggplot2)
library(ggarrange)
library(ggpubr)
d.tax<-filter(d,metric=="taxonomic")
d.phy<-filter(d,metric!="taxonomic")
View(d.tax)
d.tax<-filter(d.tax,similarity!=1)
d.tax<-filter(d.tax,similarity!=0)
tax.mod<- brm(
bf(similarity|mi(se) ~ inv_prev*set*gamma_inv*meanI_alpha|mi(seI_alpha)+(inv_prev*set|NA_L1NAME)+(1|Dataset),
phi ~inv_prev*set*gamma_inv*meanI_alpha|mi(seI_alpha)+(inv_prev*set|NA_L1NAME)+(1|Dataset)),
data = d.tax,
family = Beta(),
control=list(adapt_delta=.99),
chains = 4, iter = 4000, warmup = 3000,
cores = 4, seed = 1234,backend = "cmdstanr")
tax.mod<- brm(
bf(similarity|mi(se) ~ inv_prev*set*gamma_inv*me(meanI_alpha,seI_alpha)+(inv_prev*set|NA_L1NAME)+(1|Dataset),
phi ~inv_prev*set*gamma_inv*me(meanI_alpha,seI_alpha)+(inv_prev*set|NA_L1NAME)+(1|Dataset)),
data = d.tax,
family = Beta(),
control=list(adapt_delta=.99),
chains = 4, iter = 4000, warmup = 3000,
cores = 4, seed = 1234,backend = "cmdstanr")
tax.mod<- brm(
bf(similarity|mi(se) ~ inv_prev*set*inv_gamma*me(meanI_alpha,seI_alpha)+(inv_prev*set|NA_L1NAME)+(1|Dataset),
phi ~inv_prev*set*inv_gamma*me(meanI_alpha,seI_alpha)+(inv_prev*set|NA_L1NAME)+(1|Dataset)),
data = d.tax,
family = Beta(),
control=list(adapt_delta=.99),
chains = 4, iter = 4000, warmup = 3000,
cores = 4, seed = 1234,backend = "cmdstanr")
d.tax$seI_alpha<-ifelse(d.tax$seI_alpha=0,0.00000000001,d.tax$seI_alpha)
d.tax$seI_alpha<-ifelse(d.tax$seI_alpha==0,0.00000000001,d.tax$seI_alpha)
tax.mod<- brm(
bf(similarity|mi(se) ~ inv_prev*set*inv_gamma*me(meanI_alpha,seI_alpha)+(inv_prev*set|NA_L1NAME)+(1|Dataset),
phi ~inv_prev*set*inv_gamma*me(meanI_alpha,seI_alpha)+(inv_prev*set|NA_L1NAME)+(1|Dataset)),
data = d.tax,
family = Beta(),
control=list(adapt_delta=.99),
chains = 4, iter = 4000, warmup = 3000,
cores = 4, seed = 1234,backend = "cmdstanr")
tax.mod<- brm(
bf(similarity|mi(se) ~ inv_prev*set*inv_gamma*me(meanI_alpha,seI_alpha)+(inv_prev*set|NA_L1NAME)+(1|Dataset),
phi ~inv_prev*set*inv_gamma*me(meanI_alpha,seI_alpha)+(inv_prev*set|NA_L1NAME)+(1|Dataset)),
data = d.tax,
family = Beta(),
control=list(adapt_delta=.99),
chains = 4, iter = 4000, warmup = 3000,
cores = 4, seed = 1234)
tax.mod<- brm(
bf(similarity|mi(se) ~ inv_prev*set)+(inv_prev*set|NA_L1NAME)+(1|Dataset),
phi ~inv_prev*set+(inv_prev*set|NA_L1NAME)+(1|Dataset)),
tax.mod<- brm(
bf(similarity|mi(se) ~ inv_prev*set+(inv_prev*set|NA_L1NAME)+(1|Dataset),
phi ~inv_prev*set+(inv_prev*set|NA_L1NAME)+(1|Dataset)),
data = d.tax,
family = Beta(),
control=list(adapt_delta=.99),
chains = 4, iter = 4000, warmup = 3000,
cores = 4, seed = 1234)
summary(tax.mod)
coef(tax.mod)
phy.mod<- brm(
bf(similarity|mi(se) ~ inv_prev*set+(inv_prev*set|NA_L1NAME)+(1|Dataset),
phi ~inv_prev*set+(inv_prev*set|NA_L1NAME)+(1|Dataset)),
data = d.phy,
family = Beta(),
control=list(adapt_delta=.99),
chains = 4, iter = 4000, warmup = 3000,
cores = 4, seed = 1234)
summary(tax.mod)
d.phy<-filter(d.phy,similarity!=1)
d.phy<-filter(d.phy,similarity!=0)
d.phy<-filter(d.phy,similarity!=1)
d.phy<-filter(d.phy,similarity!=0)
d.tax<-filter(d.tax,similarity!=1)
d.tax<-filter(d.phy,similarity!=0)
d.phy$seI_alpha<-ifelse(d.phy$seI_alpha==0,0.00000000001,d.phy$seI_alpha)
d.tax<-filter(d.tax,similarity!=1)
d.tax<-filter(d.phy,similarity!=0)
d.phy<-filter(d.phy,similarity!=1)
d.phy<-filter(d.phy,similarity!=0)
d.tax<-filter(d,metric=="taxonomic")
d.phy<-filter(d,metric!="taxonomic")
d.tax<-filter(d.tax,similarity!=1)
d.tax<-filter(d.tax,similarity!=0)
d.phy<-filter(d.phy,similarity!=1)
d.phy<-filter(d.phy,similarity!=0)
d.tax$seI_alpha<-ifelse(d.tax$seI_alpha==0,0.00000000001,d.tax$seI_alpha)
d.phy$seI_alpha<-ifelse(d.phy$seI_alpha==0,0.00000000001,d.phy$seI_alpha)
View(d.phy)
phy.mod
phy.mod<- brm(
bf(similarity|mi(se) ~ inv_prev*set+(inv_prev*set|NA_L1NAME)+(1|Dataset),
phi ~inv_prev*set+(inv_prev*set|NA_L1NAME)+(1|Dataset)),
data = d.phy,
family = Beta(),
control=list(adapt_delta=.999),
chains = 4, iter = 4000, warmup = 3000,
cores = 4, seed = 1234)
phy.mod<- brm(
bf(similarity|mi(se) ~ inv_prev*set+(inv_prev*set|NA_L1NAME)+(1|Dataset),
phi ~inv_prev*set+(inv_prev*set|NA_L1NAME)+(1|Dataset)),
data = d.phy,
family = Beta(),
control=list(adapt_delta=.999),
chains = 4, iter = 7000, warmup = 5500,
cores = 4, seed = 4321)
summary(phy.mod)
tax.mod.gam<- brm(
bf(similarity|mi(se) ~ inv_prev*set*inv_gamma+(inv_prev*set|NA_L1NAME)+(1|Dataset),
phi ~inv_prev*set+(inv_prev*set*inv_gamma|NA_L1NAME)+(1|Dataset)),
data = d.tax,
family = Beta(),
control=list(adapt_delta=.99),
chains = 4, iter = 4000, warmup = 3000,
cores = 4, seed = 1234)
